/*					   KEY POSITIONS
 *		 0	 1	 2	 3	 4		 5	 6	 7	 8	 9
 *		10	11	12	13	14		15	16	17	18	19 
 *			20	21	22				23	24	25
 *					26	27		28	29
 *
 *		 	 C	 G	 D	 K		 J	 L	 U	 Y
 *		 R	 S	 T	 H	 P		 V	 N	 A	 I	 O
 *			 B	 W	 F				 M	 ,	 .
 *					   SPACE	 E
 */

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TIMEOUT) \
combo_##NAME { \
	bindings = <BINDINGS>; \
	timeout-ms = <TIMEOUT>; \
	key-positions = <KEYPOS>; \
	layers = <LAYERS>; \
};

#define COMBO_TERM_FAST 20
#define COMBO_TERM_NORMAL 30
#define COMBO_TERM_SLOW	40

/ {
    combos {
		compatible = "zmk,combos";			
		
		// missing alphas
		COMBO(x,		&kp X,			 1  2,		DEF,			COMBO_TERM_NORMAL)
		COMBO(qu,		&macro_qu,		 2  3,		DEF,			COMBO_TERM_NORMAL)
		COMBO(q,		&kp Q,			 1  3,		DEF,			COMBO_TERM_NORMAL)
		COMBO(z,		&kp Z,			20 22,		DEF,			COMBO_TERM_NORMAL)

		// missing symbols
		COMBO(grave,	UK_GRAVE,		 6  7,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(sqt,		&mm_sqt_dqt,	 7  8,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(grave3,	&macro_grave3,	 6  8,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(nequal,	&macro_nequal,	23 25,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(lt,		&kp LT,			23 24,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(gt,		&kp GT,			24 25,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(bslh,		UK_BSLH,		20 21,		DEF NUM,		COMBO_TERM_NORMAL)
		COMBO(fslh,		&kp FSLH,		21 22,		DEF NUM,		COMBO_TERM_NORMAL)

		// diagonals
		COMBO(capslock,	&kp CAPS,    	 1  8,  	DEF, 			COMBO_TERM_NORMAL)
		COMBO(capsword,	&caps_word,    	13 16,  	DEF, 			COMBO_TERM_NORMAL)
		COMBO(ssl,		DEF_STICKYS,   	11 12,  	DEF, 			COMBO_TERM_NORMAL)
		COMBO(ssr,		DEF_STICKYS,    17 18,  	DEF, 			COMBO_TERM_NORMAL)
		COMBO(backword,	DEF_BACK_WD,	11 13,		DEF NUM NAV,	COMBO_TERM_NORMAL)
		COMBO(bspc,		&kp BSPC,		16 18,		DEF NUM NAV,	COMBO_TERM_NORMAL)
		COMBO(dia_bwrd,	DEF_BACK_WD,	 2 13,		DEF NUM NAV,	COMBO_TERM_NORMAL)
		COMBO(dia_bspc,	&kp BSPC,		 7 16,		DEF NUM NAV,	COMBO_TERM_NORMAL)


		COMBO(esc,		&kp ESC,     	12 22,  	DEF NUM NAV, 	COMBO_TERM_NORMAL)
		COMBO(enter,	&kp ENTER,     	17 23,  	DEF NUM NAV, 	COMBO_TERM_NORMAL)
		COMBO(undo,		DEF_UNDO,		13 14,	  	DEF NUM NAV,	COMBO_TERM_SLOW)
		COMBO(tog_mic,	DEF_TOG_MIC,	15 16,	  	DEF NUM NAV,	COMBO_TERM_SLOW)
		COMBO(redo,		DEF_REDO,		 3  4,	  	DEF NUM NAV,	COMBO_TERM_SLOW)
		COMBO(share,	DEF_SHA_SCR,	 5  6,	  	DEF NUM NAV,	COMBO_TERM_SLOW)

		// brackets
		COMBO(arrow,	&macro_arrow,	 1 11,		DEF NUM,		COMBO_TERM_SLOW)
		COMBO(bra_sqt,	&macro_bra_sqt,	12 21,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(sqt_bra,	&macro_sqt_bra,	17 24,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(dou_bra,	&macro_dou_bra,	13 22,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(com_sep,	&macro_com_sep,	 3 13,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(rbkt,     &kp LBKT,     	 4 14,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(lbkt,		&kp RBKT,     	 5 15,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(rbrc,     &kp LBRC,     	11 20,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(lbrc,     &kp RBRC,     	18 25,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(rpar,     &kp LPAR,     	 2 12,  	DEF NUM, 		COMBO_TERM_SLOW)
		COMBO(lpar,     &kp RPAR,     	 7 17,  	DEF NUM, 		COMBO_TERM_SLOW) 
	};	
};