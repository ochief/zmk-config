#include			<behaviors.dtsi>
#include			<dt-bindings/zmk/keys.h>
#include			<dt-bindings/zmk/bt.h>
#include			<dt-bindings/zmk/outputs.h>

#define DEF			0

/*
#define NUM 		1
#define NAV 		2
#define MIS			3
*/

#define XXXXXXXXXX	&none
#define ___XXXX___	&trans
#define __________  &trans

#define THUMB_LEFT  &kp F23
#define THUMB_RIGHT &kp F24

#define HRM_R		&hm LGUI A
#define HRM_S		&hm LALT R
#define HRM_T		&hm LCTL S
#define HRM_H		&hm LSFT T

#define HRM_N		&hm LSFT N
#define HRM_A		&hm LCTL H
#define HRM_I		&hm LALT I
#define HRM_O		&hm LGUI O

#define COM_SEM     &smm COMMA SEMI
#define DOT_COL     &smm DOT COLON


/*
#define CLOSE		&ht LA(F4) LC(W)
#define CON_ONE		&bt BT_SEL 1
#define CON_TWO		&bt BT_SEL 2
#define CON_THREE	&bt BT_SEL 3
#define DEL_WORD	&kp LC(DEL)
#define DESK_L		&kp LC(LG(LEFT))
#define DESK_R		&kp LC(LG(RIGHT))
#define MON_DOL     &ht DOLLAR RA(5)
#define MUTE_MIC    &kp F9
#define NAV_SQT		&ht_sqt_nav NAV 0
#define SCREEN_SHOT &kp LG(LS(S))
#define SEL_LINES   &kp LA(LS(I))
#define SHO_APP_SEL &kp LC(LA(TAB))
#define SHO_COPY	&kp LC(C)
#define SHO_CUT		&kp LC(X)
#define SHO_PASTE	&ht LC(V) LC(LS(V))
#define SHO_REDO    &kp LC(Y)
#define SHO_SEL_ALL &kp LC(A)
#define SHO_UNDO    &kp LC(Z)
#define SLACK_UP	&kp LA(LS(UP))
#define SLACK_DN	&kp LA(LS(DOWN))
#define SMILEY      &kp LG(DOT)
#define TAB_PREV	&kp LC(PG_UP)
#define TAB_NEXT	&kp LC(PG_DN)
#define TASK_MAN	&kp LC(LS(ESC))
#define THREAD      &kp LC(LS(T))

#define VOL_DOWN 	&kp C_VOL_DN
#define VOL_UP		&kp C_VOL_UP
#define VOL_MUTE	&kp C_MUTE

#define UK_AT		&kp DQT
#define UK_DQT      &kp AT
#define UK_FSLH		&kp FSLH
#define UK_GRAVE	&kp TILDE
#define UK_HASH		&kp GRAVE
#define UK_PIPE		&kp PIPE
#define UK_POUND	&ht HASH RA(E)
#define UK_TILDE	&kp TILDE2

#define NUM_0       &ht KP_N0 LC(LS(N0))
#define NUM_1       &ht KP_N1 LC(LS(N1))
#define NUM_2       &ht KP_N2 LC(LS(N2))
#define NUM_3       &ht KP_N3 LC(LS(N3))
#define NUM_4       &ht KP_N4 LC(LS(N4))
#define NUM_5       &ht KP_N5 LC(LS(N5))
#define NUM_6       &ht KP_N6 LC(LS(N6))
#define NUM_7       &ht KP_N7 LC(LS(N7))
#define NUM_8       &ht KP_N8 LC(LS(N8))
#define NUM_9       &ht KP_N9 LC(LS(N9))
*/