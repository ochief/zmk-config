&caps_word	{ continue-list = <BACKSPACE UNDER MINUS N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>; };

/ {	
	/******************** LAYERS     ********************/	
	conditional_layers {
		compatible = "zmk,conditional-layers";
		tri_layer {
			if-layers = <NAV NUM>;
			then-layer = <MIS>;
		};
	};

	/******************** HOLD TAPS  ********************/
	hm: homerow_mod {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS";
		#binding-cells = <2>;
		tapping-term-ms = <250>;
		quick_tap_ms = <250>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
	};

	ht: hold_tap {
		compatible = "zmk,behavior-hold-tap";
		#binding-cells = <2>;
		tapping-term-ms = <200>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
	};

	/******************** MOD MORPHS ********************/
	mm_com_sem: mod_morph_comma_semicolon {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp COMMA>, <&kp SEMI>;
		mods = <(MOD_LSFT)>;
	};

	mm_dot_col: mod_morph_dot_colon {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp DOT>, <&kp COLON>;
		mods = <(MOD_LSFT)>;
	};

	mm_switch_left: mod_morph_slack_desk_left {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp LA(LS(UP))>, <&kp LC(LG(LEFT))>;
		mods = <(MOD_LSFT)>;
	};

	mm_switch_right: mod_morph_slack_desk_right {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp LA(LS(DOWN))>, <&kp LC(LG(RIGHT))>;
		mods = <(MOD_LSFT)>;
	};

	mm_up_pgup: mod_morph_up_pageup {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp UP>, <&kp PG_UP>;
		mods = <(MOD_LSFT)>;
	};

	mm_down_pgdn: mod_morph_up_pagedown {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp DOWN>, <&kp PG_DN>;
		mods = <(MOD_LSFT)>;
	};

	mm_left_home: mod_morph_left_home {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp LEFT>, <&kp HOME>;
		mods = <(MOD_LSFT)>;
	};

	mm_right_end: mod_morph_right_end {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp RIGHT>, <&kp END>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_0: mod_morph_number_0 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N0>, <&kp LC(LS(N0))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_1: mod_morph_number_1 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N1>, <&kp LC(LS(N1))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_2: mod_morph_number_2 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N2>, <&kp LC(LS(N2))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_3: mod_morph_number_3 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N3>, <&kp LC(LS(N3))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_4: mod_morph_number_4 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N4>, <&kp LC(LS(N4))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_5: mod_morph_number_5 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N5>, <&kp LC(LS(N5))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_6: mod_morph_number_6 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N6>, <&kp LC(LS(N6))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_7: mod_morph_number_7 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N7>, <&kp LC(LS(N7))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_8: mod_morph_number_8 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N8>, <&kp LC(LS(N8))>;
		mods = <(MOD_LSFT)>;
	};

	mm_number_9: mod_morph_number_9 {
		compatible = "zmk,behavior-mod-morph";
		#binding-cells = <0>;
		bindings = <&kp N9>, <&kp LC(LS(N9))>;
		mods = <(MOD_LSFT)>;
	};
};